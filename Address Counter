------------------------------
------------------------------

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
use IEEE.numeric_std.all;	-- integer
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity Address_counter is
    Port ( m_clock: 		 in std_logic;
           m_reset: 		 in std_logic;
		   m_counter_en:	 in std_logic;

		   
           m_cnt_out:		 out std_logic_vector(15 downto 0));
end Address_counter;

architecture Behavioral of Address_counter is
	-- constant Active: std_logic := '0';  -- active low
	signal s_count: integer range 0 to 65535 := 0;
	
begin

process(m_clock)
begin
if(rising_edge(m_clock)) then
    if(m_reset='1') then
        s_count <= 0;
    elsif (m_counter_en = '1') then
        s_count <= s_count + 1;
    end if;
 end if;
end process;
  m_cnt_out <= std_logic_vector(to_unsigned(s_count, m_cnt_out'length));


end Behavioral;
